name: Unit tests and Lint

on:
  workflow_call:
    inputs:
      variant:
        description: 'Build variant'
        required: true
        type: string
    secrets:
      ANDROID_KEYSTORE_BASE64:
        required: false
      ANDROID_KEYSTORE_PASSWORD:
        required: false
      ANDROID_KEY_ALIAS:
        required: false
      ANDROID_KEY_PASSWORD:
        required: false

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Download Variant Properties File
        uses: actions/download-artifact@v4
        with:
          name: properties-file
      - name: Download Local Properties File
        uses: actions/download-artifact@v4
        with:
          name: local-properties-file

      - name: Decrypt all .gpg files
        run: |
          for file in *.gpg; do
            if [[ -f "$file" ]]; then
              echo "Decrypting $file"
              gpg --batch --yes --passphrase "$GPG_PASSPHRASE" --output "${file%.gpg}" --decrypt "$file"
            fi
          done
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Run Android Lint
        run: ./gradlew lint${{ inputs.variant }}
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lint-results
          path: app/build/reports/lint-results-${{ inputs.variant }}.html

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Download Variant Properties File
        uses: actions/download-artifact@v4
        with:
          name: properties-file
      - name: Download Local Properties File
        uses: actions/download-artifact@v4
        with:
          name: local-properties-file

      - name: Decrypt all .gpg files
        run: |
          for file in *.gpg; do
            if [[ -f "$file" ]]; then
              echo "Decrypting $file"
              gpg --batch --yes --passphrase "$GPG_PASSPHRASE" --output "${file%.gpg}" --decrypt "$file"
            fi
          done
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Run unit tests
        run: ./gradlew test${{ inputs.variant }}UnitTest
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results
          path: app/build/test-results/test${{ inputs.variant }}UnitTest

#  instrumented-test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Enable KVM
#        run: |
#          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#          sudo udevadm control --reload-rules
#          sudo udevadm trigger --name-match=kvm
#
#      - name: Download Variant Properties File
#        uses: actions/download-artifact@v4
#        with:
#          name: properties-file
#      - name: Download Local Properties File
#        uses: actions/download-artifact@v4
#        with:
#          name: local-properties-file
#
#      - name: Decrypt all .gpg files
#        run: |
#          for file in *.gpg; do
#            if [[ -f "$file" ]]; then
#              echo "Decrypting $file"
#              gpg --batch --yes --passphrase "$GPG_PASSPHRASE" --output "${file%.gpg}" --decrypt "$file"
#            fi
#          done
#        env:
#          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
#
#      - name: run tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck
#        env:
#          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
#          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
#          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
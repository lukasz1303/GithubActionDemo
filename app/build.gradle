plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}

android {
    namespace 'com.example.githubactionsdemo'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.githubactionsdemo"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        buildConfig = true
    }
    signingConfigs {
        release {
            def tmpFilePath = System.getProperty("user.home") + "/work/_temp/keystore/"
            def allFilesFromDir = new File(tmpFilePath).listFiles()
            println "tmpFilePath =  ${tmpFilePath} \nallFilesFromDir = $allFilesFromDir"

            if (allFilesFromDir != null) {
                def keystoreFile = allFilesFromDir.first()
                keystoreFile.renameTo("app/keystore/keystore.jks")
            }
            println "app = ${new File("./app").list()}"
            println "keystore = ${new File("./app/keystore").list()}"
            storeFile = file("keystore/keystore.jks")
            storePassword rootProject.ext.getEnvironmentProperty("ANDROID_KEYSTORE_PASSWORD")
            keyAlias rootProject.ext.getEnvironmentProperty("ANDROID_KEY_ALIAS")
            keyPassword rootProject.ext.getEnvironmentProperty("ANDROID_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField('String', 'TestVariantField', '"Variant Debug"')
            signingConfig signingConfigs.release
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'TestVariantField', '"Variant Release"')
            signingConfig signingConfigs.release
        }
        staging {
            initWith debug
            buildConfigField('String', 'TestVariantField', '"Variant Staging"')
            signingConfig signingConfigs.release
        }
        qa {
            initWith release
            buildConfigField('String', 'TestVariantField', '"Variant QA"')
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}